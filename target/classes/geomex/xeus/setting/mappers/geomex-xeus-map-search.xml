<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="geomex.xeus.map.service.SearchMapper">

    <select id="getEmdPosi" resultType="HashMap">
        SELECT emd_cd as emdCd, emd_kor_nm
        		,st_x(st_transform((st_centroid(_geometry)), 4326))::text as lon
 				,st_y(st_transform((st_centroid(_geometry)), 4326))::text as lat


        FROM xeus.kais_emd_as

        WHERE emd_kor_nm in(#{addrArr})

    </select>

    <select id="getLiPosi" resultType="HashMap">
        SELECT li_cd, li_kor_nm
				,st_x(st_transform((st_centroid(_geometry)), 4326))::text as lon
 				,st_y(st_transform((st_centroid(_geometry)), 4326))::text as lat
        FROM xeus.kais_li_as

        WHERE substring(li_cd, 0, 9)  like #{emdCd} and li_kor_nm in(#{addrArr})

    </select>

    <select id="getSigPosi" resultType="HashMap">
        SELECT
				st_x(st_transform((st_centroid(_geometry)), 4326))::text as lon
 				,st_y(st_transform((st_centroid(_geometry)), 4326))::text as lat
        FROM xeus.kais_sig_as;



    </select>

    <select id="getEmdList" resultType="EmdVo">
        SELECT emd_cd, emd_kor_nm

        FROM xeus.kais_emd_as

        ORDER BY emd_kor_nm
    </select>
    
    <select id="getDamnmList" resultType="HashMap">
        SELECT DISTINCT damnm

        FROM xeus.ndms_hrf_dmmst

    </select>

    <select id="getLiList" resultType="LiVo">
        SELECT li_cd, li_kor_nm

        FROM xeus.kais_li_as

        ORDER BY li_kor_nm
    </select>

    <select id="getRnList" resultType="DoroVo">
        SELECT DISTINCT rn, rn_cd

        FROM xeus.kais_manage_ls

        ORDER BY rn;
    </select>


    <select id="getAddrSearchList" parameterType="HashMap" resultType="JibunSearchVo">
        SELECT DISTINCT
            CASE when li.li_kor_nm = '' then sig.sig_kor_nm || '' || emd.emd_kor_nm
                 <!--
                 180506 이은규 li가 없을경우 li를 표시하지 않음.
                 else sig.sig_kor_nm || ' ' || emd.emd_kor_nm || ' ' || li.li_kor_nm END AS emd_name, -->
                 else sig.sig_kor_nm || ' ' || emd.emd_kor_nm <if test="liChk != null and (liChk eq 'Y'.toString())">  || ' ' || li.li_kor_nm </if> END AS emd_name,
            CASE WHEN substr(cb.pnu, 11, 1) = '2' THEN '산' ELSE '' END || ltrim(substr(cb.pnu,12,4),'0') ||
            CASE WHEN ltrim(substr(cb.pnu, 16, 4), '0') = '' THEN '' ELSE '-' || ltrim(substr(cb.pnu, 16, 4), '0') END AS jibun,
            CASE bd.buld_se_cd WHEN '0' THEN '' WHEN '1' THEN '지하 ' WHEN '2' then '공중 ' ELSE '' END || rd.rn || ' ' || bd.buld_mnnm ||
            CASE WHEN bd.buld_slno = 0 THEN '' ELSE '-' || bd.buld_slno END AS bldg_no, cb.pnu

            FROM xeus.kras_cbnd_as as cb

            LEFT OUTER JOIN xeus.kais_sig_as sig on sig.sig_cd = substr(cb.pnu, 0, 6)
            LEFT OUTER JOIN xeus.kais_emd_as emd on emd.emd_cd = substr(cb.pnu, 0, 9)
            LEFT OUTER JOIN xeus.kais_li_as li on li.li_cd = substr(cb.pnu, 0, 11)
            LEFT OUTER JOIN xeus.kais_buld_as bd ON bd.emd_cd = #{emdCd} AND bd.lnbr_mnnm = #{bon}::integer
                <if test="bu != null and bu != ''">
                    AND bd.lnbr_slno = #{bu}::integer
                </if>
                <if test="bu == null or bu == ''">
                    AND bd.lnbr_slno = cast(substr(cb.pnu, 16, 4) as numeric)
                </if>
                    AND bd.mntn_yn = (CASE WHEN substr(cb.pnu, 11, 1) ='2' THEN '1' ELSE '0' END)
            LEFT OUTER JOIN xeus.kais_manage_ls rd ON bd.rds_man_no = rd.rds_man_no and bd.rn_cd = rd.rn_cd

            WHERE cb.pnu LIKE #{pnu} || '%' AND cast(substring(cb.pnu, 12, 4) as numeric) = #{bon}::integer
                <if test="bu != null and bu != ''">
                    AND cast(substring(cb.pnu, 16, 4) as numeric) = #{bu}::integer
                </if>

            ORDER BY cb.pnu
    </select>

    <select id="getNewAddrSearchList" parameterType="HashMap" resultType="DoroSearchVo">
        SELECT DISTINCT
            sig.sig_kor_nm||' '||emd.emd_kor_nm <if test="liChk != null and (liChk eq 'Y'.toString())"> ||' '|| li.li_kor_nm </if> ||' '|| ln_addr as ln_addr,
            sig.sig_kor_nm||' '||emd.emd_kor_nm <if test="liChk != null and (liChk eq 'Y'.toString())"> ||' '|| li.li_kor_nm </if> ||' '||rd_se_lbl as rd_se_lbl,
            <!--
            180506 이은규 li가 없을경우 li를 표시하지 않음.
            sig.sig_kor_nm||' '||emd.emd_kor_nm||' '||li.li_kor_nm||' '||ln_addr as ln_addr,
            sig.sig_kor_nm||' '||emd.emd_kor_nm||' '||li.li_kor_nm||' '||rd_se_lbl as rd_se_lbl, -->
            vbd._gid as gid, buld_mnnm, buld_slno

            FROM xeus.v_kais_buld_as as vbd

            LEFT OUTER JOIN xeus.kais_sig_as sig on sig.sig_cd = vbd.sig_cd
            LEFT OUTER JOIN xeus.kais_emd_as emd on emd.emd_cd = vbd.sig_cd||vbd.emd_cd
            LEFT OUTER JOIN xeus.kais_li_as li on li.li_cd = vbd.sig_cd||vbd.emd_cd||vbd.li_cd

            WHERE
                <if test="rnCd != null and rnCd != ''">
                    rn_cd = #{rnCd}
                </if>

                <if test="bon != null and bon != ''">
                    AND buld_mnnm = #{bon}::integer
                </if>

                <if test="bu != null and bu != ''">
                    AND buld_slno = #{bu}::integer
                </if>

            ORDER BY buld_mnnm, buld_slno

    </select>

    <select id="getLocation" parameterType="HashMap" resultType="LocationVo">
        SELECT st_x(st_centroid(_geometry)) || ',' || st_y(st_centroid(_geometry)) as center

        <if test="key == 'pnu'">
            FROM xeus.kras_cbnd_as
        </if>

        <if test="key == 'gid'">
            FROM xeus.v_kais_buld_as
        </if>

        WHERE
            <if test="key == 'pnu' and val != null and val != ''">
                pnu = #{val}
            </if>
            <if test="key == 'gid' and val != null and val != ''">
                _gid = #{val}::integer
            </if>
    </select>

    <select id="getCenterName" parameterType="HashMap" resultType="String">

        SELECT sig.sig_kor_nm || ' ' || emd.emd_kor_nm as addr

        FROM xeus.kais_emd_as AS emd
        LEFT OUTER JOIN xeus.kais_sig_as sig ON sig.sig_cd = substr(emd.emd_cd, 0, 6)

        WHERE st_contains(emd._geometry, ST_SetSRID(ST_Point(#{posi1}::float8 , #{posi2}::float8),5186)) = 't'

    </select>

</mapper>
