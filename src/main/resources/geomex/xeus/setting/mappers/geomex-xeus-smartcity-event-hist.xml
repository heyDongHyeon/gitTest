<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="geomex.xeus.smartcity.service.EventHistMapper">

	<select id="getList" parameterType="HashMap" resultType="EventHistVo">
		SELECT usvc_outb_id, evt_svc_nm, evt_typ, evt_typ_cd, msg_typ_cd, evt_nm,
				evt_cntn, outb_pos_nm, outb_posx, outb_posy, evt_outb_dtm, evt_clr_dtm,
				evt_proc_cd, evt_actn_dtm, evt_actn_usrid, evt_actn_cntn, test_yn, evt_json, _gid AS gid

		FROM xeus.mon_evet_hist

		<where>

			<if test="usvcOutbId != null and usvcOutbId != ''">
				AND usvc_outb_id = #{usvcOutbId}
			</if>
			<if test="uSvcOutbId != null and uSvcOutbId != ''">
				AND usvc_outb_id = #{uSvcOutbId}
			</if>


			<if test="evtSvcNm != null and evtSvcNm != ''">
				AND evt_svc_nm = #{evtSvcNm}
			</if>
			<if test="statEvetNm != null and statEvetNm != ''">
				AND evt_svc_nm = #{statEvetNm}
			</if>


			<if test="evtTyp != null and evtTyp != ''">
				AND evt_typ = #{evtTyp}
			</if>
			<if test="statEvetType != null and statEvetType != ''">
				AND evt_typ = #{statEvetType}
			</if>


			<if test="evtTypCd != null and evtTypCd != ''">
				AND evt_typ_cd = #{evtTypCd}
			</if>
			<if test="statEvetTypCd != null and statEvetTypCd != ''">
				AND evt_typ_cd = #{statEvetTypCd}
			</if>


			<if test="msgTypCd != null and msgTypCd != ''">
				AND msg_typ_cd = #{msgTypCd}
			</if>
			<if test="statMsgTypCd != null and statMsgTypCd != ''">
				AND msg_typ_cd = #{statMsgTypCd}
			</if>


			<if test="evtNm != null and evtNm != ''">
				AND evt_nm = #{evtNm}
			</if>
			<if test="statEvetNm != null and statEvetNm != ''">
				AND evt_nm = #{statEvetNm}
			</if>


			<if test="evtCntn != null and evtCntn != ''">
				AND evt_cntn = #{evtCntn}
			</if>
			<if test="statEvetCntn != null and statEvetCntn != ''">
				AND evt_cntn = #{statEvetCntn}
			</if>


			<if test="outbPosNm != null and outbPosNm != ''">
				AND outb_pos_nm = #{outbPosNm}
			</if>


			<if test="outbPosx != null and outbPosx != ''">
				AND outb_posx = #{outbPosx}::numeric
			</if>


			<if test="outbPosy != null and outbPosy != ''">
				AND outb_posy = #{outbPosy}::numeric
			</if>


			<if test="evtOutbDtm != null and evtOutbDtm != ''">
				AND evt_outb_dtm like '%'||#{evtOutbDtm}||'%'
			</if>
			<if test="statEvetOutbDtmStart != null and statEvetOutbDtmStart != '' and statEvetOutbDtmEnd != null and statEvetOutbDtmEnd != ''">
				AND evt_outb_dtm BETWEEN #{statEvetOutbDtmStart}||'000000' AND #{statEvetOutbDtmEnd}||'235959'
			</if>
			<if test="startDat != null and startDat != ''">
				AND evt_outb_dtm <![CDATA[ >= ]]> #{startDat}
			</if>

			<if test="endDat != null and endDat != ''">
				AND evt_outb_dtm <![CDATA[ <= ]]> #{endDat}
			</if>

			<if test="statEvetOutbDtm != null and statEvetOutbDtm != ''">
				AND evt_outb_dtm like '%'||#{statEvetOutbDtm}||'%'
			</if>


			<if test="evtClrDtm != null and evtClrDtm != ''">
				AND evt_clr_dtm = #{evtClrDtm}
			</if>
			<if test="statEvetClrDtm != null and statEvetClrDtm != ''">
				AND evt_clr_dtm = #{statEvetClrDtm}
			</if>


			<if test="evtProcCd != null and evtProcCd != ''">
				AND evt_proc_cd = #{evtProcCd}
			</if>
			<if test="procSt != null and procSt != ''">
				AND evt_proc_cd = #{procSt}
			</if>


			<if test="evtActnDtm != null and evtActnDtm != ''">
				AND evt_actn_dtm = #{evtActnDtm}
			</if>
			<if test="statEvetActnDtm != null and statEvetActnDtm != ''">
				AND evt_actn_dtm like '%'||#{statEvetActnDtm}||'%'
			</if>


			<if test="evtActnUsrid != null and evtActnUsrid != ''">
				AND evt_actn_usrid = #{evtActnUsrid}
			</if>
			<if test="statEvetActnMn != null and statEvetActnMn != ''">
				AND evt_actn_usrid = #{statEvetActnMn}
			</if>


			<if test="evtActnCntn != null and evtActnCntn != ''">
				AND evt_actn_cntn = #{evtActnCntn}
			</if>
			<if test="statEvetActnCntn != null and statEvetActnCntn != ''">
				AND evt_actn_cntn = #{statEvetActnCntn}
			</if>


			<if test="testYn != null and testYn != ''">
				AND test_yn = #{testYn}
			</if>
			<if test="isTest != null and isTest != ''">
				AND test_yn = #{isTest}
			</if>


			<if test="evtJson != null and evtJson != ''">
				AND evt_json = #{evtJson}
			</if>
			<if test="etcCntn != null and etcCntn != ''">
				AND evt_json = #{etcCntn}
			</if>


			<if test="gid != null and gid != ''">
				AND _gid = #{gid}::numeric
			</if>

		</where>

		<trim prefix="ORDER BY">
			<if test="sortCol != null and sortCol != '' and sortTyp != null and sortTyp != ''">
				${sortCol} ${sortTyp}
			</if>
			<if test="sortCol == null and sortTyp == null">
				evt_actn_dtm desc
			</if>
		</trim>

		<if test="limit != null and limit != '' and offset != null and offset != ''">
			LIMIT ${limit} OFFSET ${offset}
		</if>

	</select>


	<select id="getEventTypeList" parameterType="HashMap" resultType="EventHistVo">
		SELECT distinct evt_svc_nm

		FROM xeus.mon_evet_hist

		ORDER BY evt_svc_nm

	</select>


	<select id="getItem" parameterType="HashMap" resultType="EventHistVo">
		SELECT usvc_outb_id, evt_svc_nm, evt_typ, evt_typ_cd, msg_typ_cd, evt_nm, evt_cntn, outb_pos_nm, outb_posx, outb_posy, evt_outb_dtm, evt_clr_dtm, evt_proc_cd, evt_actn_dtm, evt_actn_usrid, evt_actn_cntn, test_yn, evt_json, _gid AS gid

		FROM xeus.mon_evet_hist

		<where>

			<if test="usvcOutbId != null and usvcOutbId != ''">
				AND usvc_outb_id = #{usvcOutbId}
			</if>
			<if test="uSvcOutbId != null and uSvcOutbId != ''">
				AND usvc_outb_id = #{uSvcOutbId}
			</if>


			<if test="evtSvcNm != null and evtSvcNm != ''">
				AND evt_svc_nm = #{evtSvcNm}
			</if>
			<if test="statEvetNm != null and statEvetNm != ''">
				AND evt_svc_nm = #{statEvetNm}
			</if>


			<if test="evtTyp != null and evtTyp != ''">
				AND evt_typ = #{evtTyp}
			</if>
			<if test="statEvetType != null and statEvetType != ''">
				AND evt_typ = #{statEvetType}
			</if>


			<if test="evtTypCd != null and evtTypCd != ''">
				AND evt_typ_cd = #{evtTypCd}
			</if>
			<if test="statEvetTypCd != null and statEvetTypCd != ''">
				AND evt_typ_cd = #{statEvetTypCd}
			</if>


			<if test="msgTypCd != null and msgTypCd != ''">
				AND msg_typ_cd = #{msgTypCd}
			</if>
			<if test="statMsgTypCd != null and statMsgTypCd != ''">
				AND msg_typ_cd = #{statMsgTypCd}
			</if>


			<if test="evtNm != null and evtNm != ''">
				AND evt_nm = #{evtNm}
			</if>
			<if test="statEvetNm != null and statEvetNm != ''">
				AND evt_nm = #{statEvetNm}
			</if>


			<if test="evtCntn != null and evtCntn != ''">
				AND evt_cntn = #{evtCntn}
			</if>
			<if test="statEvetCntn != null and statEvetCntn != ''">
				AND evt_cntn = #{statEvetCntn}
			</if>


			<if test="outbPosNm != null and outbPosNm != ''">
				AND outb_pos_nm = #{outbPosNm}
			</if>


			<if test="outbPosx != null and outbPosx != ''">
				AND outb_posx = #{outbPosx}::numeric
			</if>


			<if test="outbPosy != null and outbPosy != ''">
				AND outb_posy = #{outbPosy}::numeric
			</if>


			<if test="evtOutbDtm != null and evtOutbDtm != ''">
				AND evt_outb_dtm like '%'||#{evtOutbDtm}||'%'
			</if>

			<if test="startDat != null and startDat != ''">
				AND evt_outb_dtm <![CDATA[ >= ]]> #{startDat}
			</if>

			<if test="endDat != null and endDat != ''">
				AND evt_outb_dtm <![CDATA[ <= ]]> #{endDat}
			</if>

			<if test="statEvetOutbDtm != null and statEvetOutbDtm != ''">
				AND evt_outb_dtm like '%'||#{statEvetOutbDtm}||'%'
			</if>


			<if test="evtClrDtm != null and evtClrDtm != ''">
				AND evt_clr_dtm = #{evtClrDtm}
			</if>
			<if test="statEvetClrDtm != null and statEvetClrDtm != ''">
				AND evt_clr_dtm = #{statEvetClrDtm}
			</if>


			<if test="evtProcCd != null and evtProcCd != ''">
				AND evt_proc_cd = #{evtProcCd}
			</if>
			<if test="procSt != null and procSt != ''">
				AND evt_proc_cd = #{procSt}
			</if>


			<if test="evtActnDtm != null and evtActnDtm != ''">
				AND evt_actn_dtm = #{evtActnDtm}
			</if>
			<if test="statEvetActnDtm != null and statEvetActnDtm != ''">
				AND evt_actn_dtm = #{statEvetActnDtm}
			</if>


			<if test="evtActnUsrid != null and evtActnUsrid != ''">
				AND evt_actn_usrid = #{evtActnUsrid}
			</if>
			<if test="statEvetActnMn != null and statEvetActnMn != ''">
				AND evt_actn_usrid = #{statEvetActnMn}
			</if>


			<if test="evtActnCntn != null and evtActnCntn != ''">
				AND evt_actn_cntn = #{evtActnCntn}
			</if>
			<if test="statEvetActnCntn != null and statEvetActnCntn != ''">
				AND evt_actn_cntn = #{statEvetActnCntn}
			</if>


			<if test="testYn != null and testYn != ''">
				AND test_yn = #{testYn}
			</if>
			<if test="isTest != null and isTest != ''">
				AND test_yn = #{isTest}
			</if>


			<if test="evtJson != null and evtJson != ''">
				AND evt_json = #{evtJson}
			</if>
			<if test="etcCntn != null and etcCntn != ''">
				AND evt_json = #{etcCntn}
			</if>

		</where>
	</select>


	<select id="getCount" parameterType="HashMap" resultType="int">
		SELECT count(*)

		FROM xeus.mon_evet_hist

		<where>

			<if test="usvcOutbId != null and usvcOutbId != ''">
				AND usvc_outb_id = #{usvcOutbId}
			</if>
			<if test="uSvcOutbId != null and uSvcOutbId != ''">
				AND usvc_outb_id = #{uSvcOutbId}
			</if>


			<if test="evtSvcNm != null and evtSvcNm != ''">
				AND evt_svc_nm = #{evtSvcNm}
			</if>
			<if test="statEvetNm != null and statEvetNm != ''">
				AND evt_svc_nm = #{statEvetNm}
			</if>


			<if test="evtTyp != null and evtTyp != ''">
				AND evt_typ = #{evtTyp}
			</if>
			<if test="statEvetType != null and statEvetType != ''">
				AND evt_typ = #{statEvetType}
			</if>


			<if test="evtTypCd != null and evtTypCd != ''">
				AND evt_typ_cd = #{evtTypCd}
			</if>
			<if test="statEvetTypCd != null and statEvetTypCd != ''">
				AND evt_typ_cd = #{statEvetTypCd}
			</if>


			<if test="msgTypCd != null and msgTypCd != ''">
				AND msg_typ_cd = #{msgTypCd}
			</if>
			<if test="statMsgTypCd != null and statMsgTypCd != ''">
				AND msg_typ_cd = #{statMsgTypCd}
			</if>


			<if test="evtNm != null and evtNm != ''">
				AND evt_nm = #{evtNm}
			</if>
			<if test="statEvetNm != null and statEvetNm != ''">
				AND evt_nm = #{statEvetNm}
			</if>


			<if test="evtCntn != null and evtCntn != ''">
				AND evt_cntn = #{evtCntn}
			</if>
			<if test="statEvetCntn != null and statEvetCntn != ''">
				AND evt_cntn = #{statEvetCntn}
			</if>


			<if test="outbPosNm != null and outbPosNm != ''">
				AND outb_pos_nm = #{outbPosNm}
			</if>


			<if test="outbPosx != null and outbPosx != ''">
				AND outb_posx = #{outbPosx}::numeric
			</if>


			<if test="outbPosy != null and outbPosy != ''">
				AND outb_posy = #{outbPosy}::numeric
			</if>


			<if test="evtOutbDtm != null and evtOutbDtm != ''">
				AND evt_outb_dtm like '%'||#{evtOutbDtm}||'%'
			</if>
			<if test="statEvetOutbDtm != null and statEvetOutbDtm != ''">
				AND evt_outb_dtm like '%'||#{statEvetOutbDtm}||'%'
			</if>

			<if test="statEvetOutbDtmStart != null and statEvetOutbDtmStart != '' and statEvetOutbDtmEnd != null and statEvetOutbDtmEnd != ''">
				AND evt_outb_dtm BETWEEN #{statEvetOutbDtmStart}||'000000' AND #{statEvetOutbDtmEnd}||'235959'
			</if>

			<if test="evtClrDtm != null and evtClrDtm != ''">
				AND evt_clr_dtm = #{evtClrDtm}
			</if>
			<if test="statEvetClrDtm != null and statEvetClrDtm != ''">
				AND evt_clr_dtm = #{statEvetClrDtm}
			</if>


			<if test="evtProcCd != null and evtProcCd != ''">
				AND evt_proc_cd = #{evtProcCd}
			</if>
			<if test="procSt != null and procSt != ''">
				AND evt_proc_cd = #{procSt}
			</if>


			<if test="evtActnDtm != null and evtActnDtm != ''">
				AND evt_actn_dtm = #{evtActnDtm}
			</if>
			<if test="statEvetActnDtm != null and statEvetActnDtm != ''">
				AND evt_actn_dtm = #{statEvetActnDtm}
			</if>


			<if test="evtActnUsrid != null and evtActnUsrid != ''">
				AND evt_actn_usrid = #{evtActnUsrid}
			</if>
			<if test="statEvetActnMn != null and statEvetActnMn != ''">
				AND evt_actn_usrid = #{statEvetActnMn}
			</if>


			<if test="evtActnCntn != null and evtActnCntn != ''">
				AND evt_actn_cntn = #{evtActnCntn}
			</if>
			<if test="statEvetActnCntn != null and statEvetActnCntn != ''">
				AND evt_actn_cntn = #{statEvetActnCntn}
			</if>


			<if test="testYn != null and testYn != ''">
				AND test_yn = #{testYn}
			</if>
			<if test="isTest != null and isTest != ''">
				AND test_yn = #{isTest}
			</if>


			<if test="evtJson != null and evtJson != ''">
				AND evt_json = #{evtJson}
			</if>
			<if test="etcCntn != null and etcCntn != ''">
				AND evt_json = #{etcCntn}
			</if>


			<if test="gid != null and gid != ''">
				AND _gid = #{gid}::numeric
			</if>

		</where>
	</select>
		<select id="getEventChk" parameterType="HashMap" resultType="EventHistVo">
		SELECT usvc_outb_id, evt_outb_dtm, evt_nm, evt_cntn

		FROM xeus.mon_evet_hist

		<where>

			<if test="key != null and key != ''">
				AND usvc_outb_id like #{key}||'%'
			</if>
			<if test="procSt != null and procst != ''">
				AND evt_proc_cd = #{procSt}
			</if>

		</where>
	</select>


	<delete id="del" parameterType="HashMap">
		DELETE FROM xeus.mon_evet_hist WHERE usvc_outb_id = #{uSvcOutbId}
	</delete>


	<insert id="add" parameterType="EventHistVo">
		INSERT INTO xeus.mon_evet_hist(
			usvc_outb_id, evt_svc_nm, evt_typ, evt_typ_cd, msg_typ_cd, evt_nm, evt_cntn, outb_pos_nm,
			outb_posx, outb_posy, evt_outb_dtm, evt_clr_dtm, evt_proc_cd, evt_actn_dtm, evt_actn_usrid,
			evt_actn_cntn, test_yn, evt_json,

<!-- 			_annox, -->
<!-- 			_annoy, -->
			_geometry
		)
		SELECT #{usvcOutbId}, #{evtSvcNm}, #{evtTyp}, #{evtTypCd}, #{msgTypCd}, #{evtNm}, #{evtCntn}, #{outbPosNm},#{outbPosx}::numeric,#{outbPosy}::numeric,
		<!-- 			null처리 -->
<!-- 			 <choose> -->
<!-- 		        <when test="outbPosx != null and outbPosx != ''"> -->

<!-- 		        </when> -->
<!-- 		        <otherwise> -->
<!-- 		          	 null -->
<!-- 		        </otherwise> -->
<!--              </choose> -->
<!-- 		 , -->
<!-- 		 	 <choose> -->
<!-- 		        <when test="outbPosy != null and outbPosy != ''"> -->

<!-- 		        </when> -->
<!-- 		        <otherwise> -->
<!-- 		          	 null -->
<!-- 		        </otherwise> -->
<!--              </choose> -->
<!--          , -->
			#{evtOutbDtm}, #{evtClrDtm}, #{evtProcCd}, #{evtActnDtm}, #{evtActnUsrid},
			#{evtActnCntn}, #{testYn}, #{evtJson},


			(select st_transform(st_setsrid(st_makepoint(#{outbPosx}::numeric, #{outbPosy}::numeric), 4326), 5186))
		 <!-- 			null처리 -->
<!-- 		 	<choose> -->
<!-- 		        <when test="tmx != null and tmx != ''"> -->
<!-- 		             #{tmx}::numeric -->
<!-- 		        </when> -->
<!-- 		        <otherwise> -->
<!-- 		          	 null -->
<!-- 		        </otherwise> -->
<!--              </choose> -->
<!-- 		 , -->
<!-- 		 	 <choose> -->
<!-- 		        <when test="tmy != null and tmy != ''"> -->
<!-- 		             #{tmy}::numeric -->
<!-- 		        </when> -->
<!-- 		        <otherwise> -->
<!-- 		          	 null -->
<!-- 		        </otherwise> -->
<!--              </choose>	 -->
<!-- 			, -->

<!--             public.ST_SetSRID(public.ST_MakePoint( -->
<!--             	 			null처리	 -->
<!-- 			 <choose> -->
<!-- 		        <when test="tmx != null and tmx != ''"> -->
<!-- 		             #{tmx}::numeric -->
<!-- 		        </when> -->
<!-- 		        <otherwise> -->
<!-- 		          	 null -->
<!-- 		        </otherwise> -->
<!--              </choose> -->
<!-- 		 , -->
<!-- 		 	 <choose> -->
<!-- 		        <when test="tmy != null and tmy != ''"> -->
<!-- 		             #{tmy}::numeric -->
<!-- 		        </when> -->
<!-- 		        <otherwise> -->
<!-- 		          	 null -->
<!-- 		        </otherwise> -->
<!--        		 </choose>	 -->
<!--             ), 5186) -->

		       WHERE NOT EXISTS (SELECT 1 FROM xeus.mon_evet_list WHERE usvc_outb_id=#{usvcOutbId})
		       and NOT EXISTS (SELECT 1 FROM xeus.mon_evet_hist WHERE usvc_outb_id=#{usvcOutbId});
	</insert>


	<update id="edit" parameterType="EventHistVo">
		UPDATE xeus.mon_evet_hist SET

				usvc_outb_id = #{usvcOutbId}

			<if test="evtSvcNm != null and evtSvcNm != ''">
				, evt_svc_nm = #{evtSvcNm}
			</if>


			<if test="evtTyp != null and evtTyp != ''">
				, evt_typ = #{evtTyp}
			</if>


			<if test="evtTypCd != null and evtTypCd != ''">
				, evt_typ_cd = #{evtTypCd}
			</if>


			<if test="msgTypCd != null and msgTypCd != ''">
				, msg_typ_cd = #{msgTypCd}
			</if>


			<if test="evtNm != null and evtNm != ''">
				, evt_nm = #{evtNm}
			</if>


			<if test="evtCntn != null and evtCntn != ''">
				, evt_cntn = #{evtCntn}
			</if>


			<if test="outbPosNm != null and outbPosNm != ''">
				, outb_pos_nm = #{outbPosNm}
			</if>


			<if test="outbPosx != null and outbPosx != ''">
				, outb_posx = #{outbPosx}::numeric
			</if>


			<if test="outbPosy != null and outbPosy != ''">
				, outb_posy = #{outbPosy}::numeric
			</if>


			<if test="evtOutbDtm != null and evtOutbDtm != ''">
				, evt_outb_dtm = #{evtOutbDtm}
			</if>


			<if test="evtClrDtm != null and evtClrDtm != ''">
				, evt_clr_dtm = #{evtClrDtm}
			</if>


			<if test="evtProcCd != null and evtProcCd != ''">
				, evt_proc_cd = #{evtProcCd}
			</if>


			<if test="evtActnDtm != null and evtActnDtm != ''">
				, evt_actn_dtm = #{evtActnDtm}
			</if>


			<if test="evtActnUsrid != null and evtActnUsrid != ''">
				, evt_actn_usrid = #{evtActnUsrid}
			</if>


			<if test="evtActnCntn != null and evtActnCntn != ''">
				, evt_actn_cntn = #{evtActnCntn}
			</if>


			<if test="testYn != null and testYn != ''">
				, test_yn = #{testYn}
			</if>


			<if test="evtJson != null and evtJson != ''">
				, evt_json = #{evtJson}
			</if>

			, _annox = #{tmx}::numeric

			, _annoy = #{tmy}::numeric

			, _geometry = public.ST_SetSRID(public.ST_MakePoint(#{tmx}::numeric, #{tmy}::numeric), 5186)

		WHERE usvc_outb_id = #{usvcOutbId}

	</update>

</mapper>
